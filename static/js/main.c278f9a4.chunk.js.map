{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","request","setRequest","_useState3","_useState4","isFindDisabled","setIsFindDisabled","_useState5","_useState6","setMovie","_useState7","_useState8","isError","setIsError","_useState9","_useState10","isLoading","setIsLoading","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","result","picture","newMovie","wrap","_context","prev","next","preventDefault","query","fetch","concat","then","res","json","catch","Response","Error","sent","film","Poster","Title","Plot","imdbID","finish","stop","_x","apply","arguments","_Fragment","onSubmit","htmlFor","type","id","value","placeholder","onChange","_ref2","currentTarget","disabled","onClick","findIndex","newList","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c278f9a4.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (movies: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [request, setRequest] = useState('');\n  const [isFindDisabled, setIsFindDisabled] = useState(true);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function getPicture(film: MovieData) {\n    return film.Poster && film.Poster !== 'N/A'\n      ? film.Poster\n      : 'https://via.placeholder.com/360x270.png?text=no%20preview';\n  }\n\n  function resetForm() {\n    setMovie(null);\n    setIsFindDisabled(true);\n    setRequest('');\n  }\n\n  const handleInputChange = ({ currentTarget }:\n  React.FormEvent<HTMLInputElement>) => {\n    setRequest(currentTarget.value);\n\n    if (currentTarget.value) {\n      setIsFindDisabled(false);\n      setIsError(false);\n    } else {\n      setIsFindDisabled(true);\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      const result = await getMovie(request);\n\n      if (result.Response === 'True') {\n        const picture = getPicture(result);\n\n        const newMovie = {\n          title: result.Title,\n          description: result.Plot,\n          imgUrl: picture,\n          imdbUrl: `https://www.imdb.com/title/${result.imdbID}`,\n          imdbId: result.imdbID,\n        };\n\n        setMovie(newMovie);\n      } else {\n        setIsError(true);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleListMovies = () => {\n    if (movie && movies.findIndex(film => film.imdbId === movie.imdbId)) {\n      const newList = [...movies, movie];\n\n      setMovies(newList);\n    }\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={request}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={handleInputChange}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button is-light ${isLoading ? 'is-loading' : ''}`}\n              disabled={isFindDisabled}\n            >\n\n              {!movie || isError ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleListMovies}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d78fce90';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}